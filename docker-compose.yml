services:
  postgres:
    image: postgres
    restart: always
    container_name: postgres-db
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./src/main/resources/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U myuser -d mydb"]
      interval: 5s
      timeout: 3s
      retries: 3

  adminer:
    image: adminer
    restart: always
    container_name: adminer-db
    ports:
      - "8081:8080"

  redis:
    image: redis:alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
  
  # datumprikker:
  #   build: .
  #   restart: on-failure
  #   container_name: datumprikker-api
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   environment:
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_NAME: mydb
  #     DB_USER: myuser
  #     DB_PASSWORD: mypassword
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379

volumes:
  pgdata:
  redisdata: